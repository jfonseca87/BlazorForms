@page "/people/person"
@page "/people/person/{Id:int}"

@inject IPersonService personSvc
@inject IToastService toastSvc
@inject NavigationManager navManager

<h3>Person</h3>

<EditForm Model="_person" OnValidSubmit="Save">
    <DataAnnotationsValidator />
    <div class="form-container">
        <div class="form-custom-row">
            <div class="form-custom-control middle-size">
                <label>FirstName: </label>
                <input type="text" @bind="_person.FirstName" />
                <ValidationMessage For=@(() => _person.FirstName) />
            </div>
            <div class="form-custom-control middle-size">
                <label>LastName: </label>
                <input type="text" @bind="_person.LastName" />
                <ValidationMessage For=@(() => _person.LastName) />
            </div>
        </div>
        <div class="form-custom-row">
            <div class="form-custom-control middle-size">
                <label>Email: </label>
                <input type="text" @bind="_person.Email" />
                <ValidationMessage For=@(() => _person.Email) />
            </div>
            <div class="form-custom-control middle-size">
                <label>Phone Number: </label>
                <input type="text" @bind="_person.PhoneNumber" />
            </div>
        </div>
        <div class="form-custom-row">
            <div class="form-custom-control middle-size">
                <label>Birthdate: </label>
                <input type="date" @bind="_person.Birthdate" />
                <ValidationMessage For=@(() => _person.Birthdate) />
            </div>
            <div class="form-custom-control middle-size">
                <label>Active</label>
                <input type="checkbox" @bind="_person.IsActive" />
            </div>
        </div>
        <div class="form-custom-row">
            <div class="form-custom-control full-size">
                <label>Comments: </label>
                <textarea rows="5" class="full-size" @bind="_person.Comments" @bind:event="oninput"></textarea>
            </div>
        </div>
        <div class="form-survey">
            <div class="full-size">
                <label>Do you have experience with programing?</label>
                <input type="radio"
                       name="experience"
                       checked="@(_person.WorkingExperience == 1)"
                       value="1"
                       @onchange="WorkingExperienceHandler" /> Yes
                <input type="radio"
                       name="experience"
                       checked="@(_person.WorkingExperience == 2)"
                       value="2"
                       @onchange="WorkingExperienceHandler" /> No
                <ValidationMessage For=@(() => _person.WorkingExperience) />
            </div>
            @if (_person.WorkingExperience == 1)
            {
                <div class="form-custom-control middle-size">
                    <label>Seniority Level: </label>
                    <select @bind="_person.SeniorityLevel">
                        <option value=0>Select...</option>
                        <option value=1>Less than 1 year</option>
                        <option value=2>2 years</option>
                        <option value=3>5 years</option>
                        <option value=4>More than 5 years</option>
                    </select>
                    <ValidationMessage For=@(() => _person.SeniorityLevel) />
                </div>
            }
            <div class="full-size">
                <label>Are you agree with living abroad?</label>
                <input type="radio"
                       name="abroad"
                       checked="@(_person.WorkingAbroad == 1)"
                       value="1"
                       @onchange="WorkingAbroadHandler" /> Yes
                <input type="radio"
                       name="abroad"
                       checked="@(_person.WorkingAbroad == 2)"
                       value="2"
                       @onchange="WorkingAbroadHandler" /> No
                <ValidationMessage For="@(() => _person.WorkingAbroad)" />
            </div>
        </div>
        <div class="form-custom-row form-buttons">
            <button type="submit">Save</button>
            <button type="button" @onclick="Cancel">Cancel</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }
    private Person _person = new Person();
    private EditContext _context;

    protected override async Task OnInitializedAsync()
    {
        _person.Birthdate = DateTime.Now;
        if (Id.HasValue)
        {
            _person = (await personSvc.GetPersonById(Id.Value)).Data;
        }
    }

    private async Task Save()
    {
        Console.WriteLine(JsonConvert.SerializeObject(_person));
        ApiResponse<bool> result = Id.HasValue
                ? await personSvc.UpdatePerson(_person)
                : await personSvc.AddNewPerson(_person);

        if (result.Status == ResponseStatus.Success)
        {
            string message = Id.HasValue
                ? "Person updated successfully."
                : "Person added successfully.";
            toastSvc.ShowSuccess(message);
                
            navManager.NavigateTo("/people");
        }
    }

    private void Cancel()
    {
        navManager.NavigateTo("/people");
    }
    
    private void WorkingExperienceHandler(ChangeEventArgs args)
    {
        _person.WorkingExperience = Convert.ToInt16(args.Value);
        if (_person.WorkingExperience == 2)
        {
            _person.SeniorityLevel = 0;
        }
    }

    private void WorkingAbroadHandler(ChangeEventArgs args)
    {
        _person.WorkingAbroad = Convert.ToInt16(args.Value);
    }
}
